edition="2023";

// Package cyoa defines the backend API for cyoa-exploratory.
package cyoa;
option go_package = "github.com/kingofmen/cyoa-exploratory/backend/proto";

import "story/proto/story.proto";

service Cyoa {
  rpc CreateLocation(CreateLocationRequest) returns (CreateLocationResponse) {}
  rpc UpdateLocation(UpdateLocationRequest) returns (UpdateLocationResponse) {}
  rpc DeleteLocation(DeleteLocationRequest) returns (DeleteLocationResponse) {}
  rpc GetLocation(GetLocationRequest) returns (GetLocationResponse) {}
  rpc ListLocations(ListLocationsRequest) returns (ListLocationsResponse) {}

  rpc UpdateStory(UpdateStoryRequest) returns (UpdateStoryResponse) {}
  rpc DeleteStory(DeleteStoryRequest) returns (DeleteStoryResponse) {}
  rpc GetStory(GetStoryRequest) returns (GetStoryResponse) {}
  rpc ListStories(ListStoriesRequest) returns (ListStoriesResponse) {}

  rpc CreateAction(CreateActionRequest) returns (CreateActionResponse) {}
  rpc UpdateAction(UpdateActionRequest) returns (UpdateActionResponse) {}
  rpc DeleteAction(DeleteActionRequest) returns (DeleteActionResponse) {}
  rpc GetAction(GetActionRequest) returns (GetActionResponse) {}
  rpc ListActions(ListActionsRequest) returns (ListActionsResponse) {}

  rpc CreateGame(CreateGameRequest) returns (CreateGameResponse) {}
  rpc ListGames(ListGamesRequest) returns (ListGamesResponse) {}
  rpc PlayerAction(PlayerActionRequest) returns (PlayerActionResponse) {}
};

enum StoryView {
  VIEW_UNSPECIFIED = 0;
  VIEW_BASIC = 1;
  VIEW_PROTO = 2;
  VIEW_CONTENT = 3;
}

// Locations.
message CreateLocationRequest {
  story.Location location = 1;
}
message CreateLocationResponse{
  story.Location location = 1;
}

message UpdateLocationRequest {
  string location_id = 1;
  story.Location location = 2;
}
message UpdateLocationResponse{
  story.Location location = 1;
}

message DeleteLocationRequest {
  string location_id = 1;
}
message DeleteLocationResponse{}

message GetLocationRequest {
  string location_id = 1;
}
message GetLocationResponse{
  story.Location location = 1;
}

message ListLocationsRequest{}
message ListLocationsResponse{
  repeated story.Location locations = 1;
}

message StoryContent {
  repeated story.Location locations = 1;
  repeated story.Action actions = 2;
}

// UpdateStory creates-or-updates the provided story.
message UpdateStoryRequest {
  story.Story story = 1;
  StoryContent content = 2;
}
message UpdateStoryResponse{
  story.Story story = 1;
  StoryContent content = 2;
}

message DeleteStoryRequest {
  int64 id = 1;
}
message DeleteStoryResponse{}

message GetStoryRequest {
  int64 id = 1;
  StoryView view = 2;
}
message GetStoryResponse{
  story.Story story = 1;
  StoryContent content = 2;
}

// ListStories returns a list of basic views of stories,
// that is, only ID, title, and description is included.
message ListStoriesRequest{}
message ListStoriesResponse{
  repeated story.Story stories = 1;
}

// Actions.
message CreateActionRequest{
  story.Action action = 1;
}
message CreateActionResponse{
  story.Action action = 1;
}

message UpdateActionRequest {
  story.Action action = 1;
}
message UpdateActionResponse{
  story.Action action = 1;
}

message DeleteActionRequest {}
message DeleteActionResponse{}

message GetActionRequest {}
message GetActionResponse{}

message ListActionsRequest{}
message ListActionsResponse{}

message CreateGameRequest{
  int64 story_id = 1;
}

message CreateGameResponse{
  int64 game_id = 1;
}

message ListGamesRequest{}
message ListGamesResponse{
  repeated story.Playthrough games = 1;
}

message PlayerActionRequest{
  int64 game_id = 1;
  string action_id = 2;
}
message PlayerActionResponse{
  story.Playthrough game_state = 1;
  string narrative = 2;
}